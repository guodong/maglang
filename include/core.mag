


/***** path type definition *****/
typedef string swid_t;
typedef string portid_t;
typedef tuple<swid_t, portid_t> swport_t;

enum path_mode {
    ANY,  // forward to one of the dst swport
    ALL   // multicast to all of the dst swport
}

/** defines forward behaivor of switch, when pkt comes from src, send pkt to dst according to path_mode **/
struct path_ele_t {
    path_mode mode;
    swid_t sw;
    set<portid_t> src;
    set<portid_t> dst;
}

typedef list<path_ele_t> path_t;

path_t drop = []; // drop is an empty list

/***** packet structure *****/
struct packet_t<H, M> {
    H hdr;
    M meta;
    swport_t ingress_swport;        // ingress switch and port
    path_t  egress_path;            // the egress forwarding path
    action egress_path_action_each(inout headers_t, in path_ele_t, in switch_meta_t);    // the forward action exec on each node when forwarding along egress_path
    action egress_path_action_once(inout headers_t, in path_ele_t, in switch_meta_t);    // the forward action exec once when forwarding along egress_path
    bit<32> packet_length;
}

/***** switch metadata, for action iteration *****/
struct switch_meta_t {
    bit<32> enq_timestamp;
    bit<19> enq_qdepth;
    bit<32> deq_timedelta;
    bit<19> deq_qdepth;
}

/***** hash function *****/
enum HashAlgorithm {
    crc32,
    crc32_custom,
    crc16,
    crc16_custom,
    random,
    identity,
    csum16,
    xor16
}

extern void hash<O, T, D, M>(out O result, in HashAlgorithm algo, in T base, in D data, in M max);

/** core extern functions, bellow should be implement by magellan compiler **/
@builtin
extern bit<32> ip2int(in string ip);
@builtin
extern bit<48> mac2int(in string mac);