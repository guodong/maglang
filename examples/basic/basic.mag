/** dependencies include **/
#include <core.mag>
#include <headers.mag>
#incluee <parser.mag>

/** extern functions, impleneted in external codes **/
extern path_t shortest_path(swport_t src, swpport_t dst);

/** global data structures **/
/** these could be set by another function, but finally it must has value as following **/
map<ip4Addr_t, swport_t> ip_to_swport = {
    ip2int('10.0.1.1'): ('h1', 'eth0'),
    ip2int('10.0.2.2'): ('h2', 'eth0'),
    ip2int('10.0.3.3'): ('h3', 'eth0'),
    ip2int('10.0.4.4'): ('h4', 'eth0')
};
map<ip4Addr_t, macAddr_t> ipv4_to_mac = {
    ip2int('10.0.1.1'): mac2int('08:00:00:00:01:11'),
    ip2int('10.0.2.2'): mac2int('08:00:00:00:02:22'),
    ip2int('10.0.3.3'): mac2int('08:00:00:00:03:33'),
    ip2int('10.0.4.4'): mac2int('08:00:00:00:04:44')
}

/** path action, will be performed on each or one of switches of path.
 ** pseudo code of the procedure:
 **   for path_ele in pkt.egress_path:
 **     perform pkt.egress_path_action_each(pkt.hdr, path_ele) on path_ele
 **
 **   path_ele = select one of path_ele in pkt.egress_path
 **   perform pkt.egress_path_action_once(pkt.hdr, path_ele) on path_ele
 **/
action dec_ttl(inout headers_t hdr, in path_ele_t path_ele, in switch_meta_t switch_meta) {
  hdr.ipv4.ttl--;
}

action rewrite_mac(inout headers_t hdr, in path_ele_t path_ele, in switch_meta_t switch_meta) {
    hdr.ethernet.dstAddr = ipv4_to_mac[hdr.ipv4.dst];
}


@label('external_ingress')
void on_pkt(inout packet_t<headers_t, metadata_t> pkt) {
    auto path = shortest_path(pkt.ingress_swport, ip_to_swport.lpm(pkt.hdr.ipv4.dst));
    pkt.egress_path = path;
    pkt.egress_path_action_each = dec_ttl;
    pkt.egress_path_action_once = rewrite_mac;
}